{
  "version": 3,
  "sources": ["browser-route-module:/Users/kentcdodds/Desktop/stream-away-the-wait-talk/apps/09-client-side-fetch/app/routes/__app/sales/deposits.tsx?browser", "../../../../../app/routes/__app/sales/deposits.tsx"],
  "sourcesContent": ["export { default } from \"/Users/kentcdodds/Desktop/stream-away-the-wait-talk/apps/09-client-side-fetch/app/routes/__app/sales/deposits.tsx\";", "import * as React from \"react\";\nimport { Link, useLoaderData, useOutlet, useParams } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\nimport { json } from \"@remix-run/server-runtime\";\nimport { CevronDownIcon } from \"~/components\";\nimport { getDepositListItems } from \"~/models/deposit.server\";\nimport { requireUser } from \"~/session.server\";\nimport { currencyFormatter } from \"~/utils\";\nimport clsx from \"clsx\";\n\ntype LoaderData = {\n  deposits: Awaited<ReturnType<typeof getDepositListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUser(request);\n  return json<LoaderData>({\n    deposits: await getDepositListItems(),\n  });\n};\n\nexport default function Deposits() {\n  const data = useLoaderData() as LoaderData;\n  const outlet = useOutlet();\n  const { depositId } = useParams();\n  const depositNotFound =\n    depositId && data.deposits.every((d) => d.id !== depositId);\n  return (\n    <div className=\"overflow-hidden rounded-lg border border-gray-200\">\n      {depositNotFound ? (\n        <div className=\"p-12 text-red-500\">\n          No deposit found with the ID of \"{depositId}\"\n        </div>\n      ) : null}\n      <table className=\"w-full\">\n        <thead className=\"border-b-2 border-gray-200\">\n          <tr>\n            <th className=\"border border-gray-100 py-2 px-4\"></th>\n            <th className=\"border border-gray-100 py-2 px-4\">Date</th>\n            <th className=\"border border-gray-100 py-2 px-4\">Invoice</th>\n            <th className=\"border border-gray-100 py-2 px-4\">Customer</th>\n            <th className=\"border border-gray-100 py-2 px-4\">Amount</th>\n          </tr>\n        </thead>\n        <tbody className=\"max-h-[100px]\">\n          {data.deposits.map((d) => (\n            <React.Fragment key={d.id}>\n              <tr>\n                <td className=\"border border-gray-100 py-2 px-4\">\n                  <Link\n                    to={d.id === depositId ? \".\" : d.id}\n                    className=\"flex justify-center\"\n                  >\n                    <CevronDownIcon\n                      className={clsx({\n                        \"-rotate-90\": d.id === depositId,\n                      })}\n                    />\n                  </Link>\n                </td>\n                <td className=\"border border-gray-100 py-2 px-4\">\n                  {d.depositDateFormatted}\n                </td>\n                <td className=\"border border-gray-100 py-2 px-4\">\n                  <Link\n                    className=\"text-blue-600 underline\"\n                    to={`../invoices/${d.invoice.id}`}\n                  >\n                    {d.invoice.number}\n                  </Link>\n                </td>\n                <td className=\"border border-gray-100 py-2 px-4\">\n                  <Link\n                    className=\"text-blue-600 underline\"\n                    to={`../customers/${d.invoice.customer.id}`}\n                  >\n                    {d.invoice.customer.name}\n                  </Link>\n                </td>\n                <td className=\"border border-gray-100 py-2 px-4\">\n                  {currencyFormatter.format(d.amount)}\n                </td>\n              </tr>\n              {d.id === depositId ? (\n                <tr>\n                  <td colSpan={5}>{outlet}</td>\n                </tr>\n              ) : null}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,YAAuB;AAKvB,qBAAoC;AACpC,qBAA4B;AAeb,oBAAoB;AACjC,QAAM,OAAO;AACb,QAAM,SAAS;AACf,QAAM,EAAE,cAAc;AACtB,QAAM,kBACJ,aAAa,KAAK,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO;AACnD,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,kBACC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAoB,qCACC,WAAU,OAE5C,MACJ,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACf,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACf,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,MACd,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmC,SACjD,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmC,YACjD,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmC,aACjD,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAmC,aAGrD,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACd,KAAK,SAAS,IAAI,CAAC,MAClB,oCAAO,gBAAP;AAAA,IAAgB,KAAK,EAAE;AAAA,KACrB,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,MAAD;AAAA,IACE,IAAI,EAAE,OAAO,YAAY,MAAM,EAAE;AAAA,IACjC,WAAU;AAAA,KAEV,oCAAC,gBAAD;AAAA,IACE,WAAW,eAAK;AAAA,MACd,cAAc,EAAE,OAAO;AAAA;AAAA,QAK/B,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,EAAE,uBAEL,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAI,eAAe,EAAE,QAAQ;AAAA,KAE5B,EAAE,QAAQ,UAGf,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,MAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAI,gBAAgB,EAAE,QAAQ,SAAS;AAAA,KAEtC,EAAE,QAAQ,SAAS,QAGxB,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,kBAAkB,OAAO,EAAE,WAG/B,EAAE,OAAO,YACR,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAI,SAAS;AAAA,KAAI,WAEjB;AAAA;",
  "names": []
}
