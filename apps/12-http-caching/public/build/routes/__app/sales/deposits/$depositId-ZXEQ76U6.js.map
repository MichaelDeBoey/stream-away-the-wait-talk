{
  "version": 3,
  "sources": ["browser-route-module:/Users/kentcdodds/Desktop/stream-away-the-wait-talk/apps/12-http-caching/app/routes/__app/sales/deposits/$depositId.tsx?browser", "../../../../../../app/routes/__app/sales/deposits/$depositId.tsx"],
  "sourcesContent": ["export { CatchBoundary, default } from \"/Users/kentcdodds/Desktop/stream-away-the-wait-talk/apps/12-http-caching/app/routes/__app/sales/deposits/$depositId.tsx\";", "import type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/node\";\nimport { deleteDeposit, getDepositDetails } from \"~/models/deposit.server\";\nimport { requireUser } from \"~/session.server\";\nimport invariant from \"tiny-invariant\";\nimport { TrashIcon } from \"~/components\";\n\ntype LoaderData = {\n  depositNote: string;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  await requireUser(request);\n  const { depositId } = params;\n  if (typeof depositId !== \"string\") {\n    throw new Error(\"This should be unpossible.\");\n  }\n  const depositDetails = await getDepositDetails(depositId);\n  if (!depositDetails) {\n    throw new Response(\"not found\", { status: 404 });\n  }\n\n  return json<LoaderData>({\n    depositNote: depositDetails.note,\n  });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const { depositId } = params;\n  if (typeof depositId !== \"string\") {\n    throw new Error(\"This should be unpossible.\");\n  }\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  invariant(typeof intent === \"string\", \"intent must be a string\");\n  switch (intent) {\n    case \"delete\": {\n      await deleteDeposit(depositId);\n      return redirect(\"/sales/deposits\");\n    }\n    default: {\n      throw new Error(`Unsupported intent: ${intent}`);\n    }\n  }\n};\n\nexport default function DepositRoute() {\n  const data = useLoaderData() as LoaderData;\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between\">\n        {data.depositNote ? (\n          <span>\n            Note:\n            <br />\n            <span className=\"pl-1\">{data.depositNote}</span>\n          </span>\n        ) : (\n          <span className=\"text-m-p-sm uppercase text-gray-500 md:text-d-p-sm\">\n            No note\n          </span>\n        )}\n        <div>\n          <Form method=\"post\">\n            <button\n              type=\"submit\"\n              title=\"Delete deposit\"\n              name=\"intent\"\n              value=\"delete\"\n            >\n              <TrashIcon />\n            </button>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  // no outlet is rendered if it doesn't match a deposit in the UI\n  // so this should never be called\n  return null;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,qBAAiD;AACjD,qBAA4B;AA2Cb,wBAAwB;AACrC,QAAM,OAAO;AACb,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,KAAK,cACJ,oCAAC,QAAD,MAAM,SAEJ,oCAAC,MAAD,OACA,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAQ,KAAK,gBAG/B,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAqD,YAIvE,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,IACN,MAAK;AAAA,IACL,OAAM;AAAA,KAEN,oCAAC,WAAD;AAAA;AASP,yBAAyB;AAG9B,SAAO;AAAA;",
  "names": []
}
